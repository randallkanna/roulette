{
  "contractName": "Donate",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "create",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052348015600f57600080fd5b5060868061001e6000396000f300608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063efc81a8c146044575b600080fd5b348015604f57600080fd5b5060566058565b005b5600a165627a7a723058201c4f61ae928cac6f31296b804844e7115612f133a14074566e31b20e835a5b880029",
  "deployedBytecode": "0x608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063efc81a8c146044575b600080fd5b348015604f57600080fd5b5060566058565b005b5600a165627a7a723058201c4f61ae928cac6f31296b804844e7115612f133a14074566e31b20e835a5b880029",
  "sourceMap": "26:88:0:-;;;46:38;8:9:-1;5:2;;;30:1;27;20:12;5:2;46:38:0;26:88;;;;;;",
  "deployedSourceMap": "26:88:0:-;;;;;;;;;;;;;;;;;;;;;;;;88:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;88:24:0;;;;;;;:::o",
  "source": "pragma solidity ^0.4.4;\n\n\ncontract Donate {\n  constructor() {\n    // constructor\n  }\n\n  function create() {\n\n  }\n}\n\n\n/* contract Donate {\n\n\n\naddress public owner;\n\nuint256 public minimumDonation;\n\nuint256 public totalDonated;\n\nuint 256 public numberOfDonations;\n\nUint256 public maxAmountOfDonations = 100;\n\naddress[] public donaters;\n\n\n\nstruct Donater {\n\n      uint256 amountDonated;\n\n      uint256 numberSelected;\n\n   }\n\n\n\nmapping(address => Donater) public donaterInfo;\n\n\n\n// With this, I could do something like this donaterInfo[address].amountDonated */\n",
  "sourcePath": "/Users/randallkanna/Documents/code/eth/roulette/contracts/Donate.sol",
  "ast": {
    "absolutePath": "/Users/randallkanna/Documents/code/eth/roulette/contracts/Donate.sol",
    "exportedSymbols": {
      "Donate": [
        10
      ]
    },
    "id": 11,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10,
        "linearizedBaseContracts": [
          10
        ],
        "name": "Donate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4,
              "nodeType": "Block",
              "src": "60:24:0",
              "statements": []
            },
            "documentation": null,
            "id": 5,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "57:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 3,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "60:0:0"
            },
            "scope": 10,
            "src": "46:38:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8,
              "nodeType": "Block",
              "src": "106:6:0",
              "statements": []
            },
            "documentation": null,
            "id": 9,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "create",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "103:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "106:0:0"
            },
            "scope": 10,
            "src": "88:24:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 11,
        "src": "26:88:0"
      }
    ],
    "src": "0:558:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/randallkanna/Documents/code/eth/roulette/contracts/Donate.sol",
    "exportedSymbols": {
      "Donate": [
        10
      ]
    },
    "id": 11,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10,
        "linearizedBaseContracts": [
          10
        ],
        "name": "Donate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4,
              "nodeType": "Block",
              "src": "60:24:0",
              "statements": []
            },
            "documentation": null,
            "id": 5,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "57:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 3,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "60:0:0"
            },
            "scope": 10,
            "src": "46:38:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8,
              "nodeType": "Block",
              "src": "106:6:0",
              "statements": []
            },
            "documentation": null,
            "id": 9,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "create",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "103:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "106:0:0"
            },
            "scope": 10,
            "src": "88:24:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 11,
        "src": "26:88:0"
      }
    ],
    "src": "0:558:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {
    "1527812613217": {
      "events": {},
      "links": {},
      "address": "0xbf40227f1a2c667eddae035ffb20388247ee02ea",
      "transactionHash": "0x32a41314392572a42b541abbb7fe6859caf014a7e42bb18d42d1dbe7aa92ef2f"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-01T00:29:17.967Z"
}